{"backend_state":"running","connection_file":"/tmp/xdg-runtime-user/jupyter/kernel-061c002c-60bd-42d7-9c74-ab4ea9647d90.json","kernel":"python3","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.10"},"nbgrader":{"__altered":false,"__hash":-335098374,"_root":{"entries":[["cocalc_minimal_stubs",false]],"ownerID":{}},"cocalc_minimal_stubs":false,"size":1}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1665575766059,"exec_count":1,"id":"47014e","input":"StudyBuddies = []","kernel":"python3","no_halt":true,"pos":2,"start":1665575766052,"state":"done","type":"cell"}
{"cell_type":"code","end":1665575766089,"exec_count":2,"id":"14258f","input":"def extract_tot_pop_USA(file):\n    with open(file) as f:\n        temp = f.read()\n        temp_list = temp.split(\"\\n\") #split all lines\n        for entry in temp_list:\n            if (\"Total\" in entry): #only interested in finding total\n                temp_string = entry\n                index1 = temp_string.find('\"')\n\n                #recursively remove double quotes and commas between them\n                while(index1 != -1):\n                    index2 = temp_string.find('\"', index1 +1)\n                    temp_string2 = temp_string[index1+1:index2].replace(\",\", \"\")\n                    temp_string3 = temp_string[:index1] + temp_string2 + temp_string[index2+1:]\n                    temp_string = temp_string3\n                    index1 = temp_string.find('\"')\n\n                temp_list2 = temp_string.split(\",\") #clean list obtained to extract total population\n                for item in temp_list2:\n                    if(item.isdigit()):\n                        total_pop = int(item) #the first numerical entry will be total population\n                        break\n                break #stop the loop since we got the required entry\n    return total_pop","kernel":"python3","no_halt":true,"pos":13,"start":1665575766065,"state":"done","type":"cell"}
{"cell_type":"code","end":1665575766107,"exec_count":3,"id":"32f0da","input":"AU_FILE_1 = \"2021Census_G10A_AUS_AUS.csv\"\nAU_FILE_2 = \"2021Census_G10B_AUS_AUS.csv\"\nAU_FILE_3 = \"2021Census_G10C_AUS_AUS.csv\"\n\nUSA_FILE = \"ACSDT5Y2020.B05006-2022-09-21T114433.csv\"\nUSA_FILE_TOTAL_POP = \"ACSDT5Y2020.B05002-2022-09-21T090706.csv\"\n\nTOTAL_POP_AU = 25422788 #obtained from source described in context\nTOTAL_POP_USA = extract_tot_pop_USA(USA_FILE_TOTAL_POP)","kernel":"python3","no_halt":true,"pos":15,"start":1665575766093,"state":"done","type":"cell"}
{"cell_type":"code","end":1665575766129,"exec_count":4,"id":"60591c","input":"def clean_au(file):\n    au_list = []\n\n    with open(file) as f:\n        country_list = f.readline().split(\",\")\n        numbers_list = f.readline().split(\",\")\n\n        #go through the data entries\n        for i in range(len(country_list)):\n\n            #extract the totals as needed\n            index = country_list[i].find(\"_Tot\")\n            if (index != -1):\n                temp_name = country_list[i][:index].replace(\"_\", \" \")\n                if (temp_name.startswith(\"China\")):\n                    temp_name = \"China\" #enhancing readibility\n                elif (temp_name.startswith(\"Hong Kong\")):\n                    temp_name = \"Hong Kong\" #enhancing readibility\n                elif (\"Tot\" in temp_name):\n                    temp_name = \"Overseas Born\" #create an entry for total overseas born \n                elif (\"Born\" in temp_name or \"Not\" in temp_name):\n                    continue #skip the non relevant data entries \n                my_tuple = (temp_name, int(numbers_list[i])) #convert numerical entry to integer\n                au_list.append(my_tuple)\n\n        return au_list\n\ndef combine_and_sort(listoflists):\n\n    temp = listoflists\n    final_list = []\n    for data_list in temp:\n        final_list = final_list + data_list #combine all lists extracted from the data files\n\n    #now lets sort so we have our top overseas birth places at the top\n    sorted_list = sorted(final_list, key = lambda a:a[1], reverse = True)\n\n    return sorted_list","kernel":"python3","no_halt":true,"pos":17,"start":1665575766112,"state":"done","type":"cell"}
{"cell_type":"code","end":1665575766152,"exec_count":5,"id":"86a9a8","input":"def clean_usa(file):\n    with open(file) as f:\n        temp_file = f.read() #reads the entire content of the file\n        temp_file_list = temp_file.split(\"\\n\") #splits all lines \n        file_list = temp_file_list[1:] #skip the header line \n        final_list = []\n        my_list = []\n        for line in file_list:\n            if (\":\" in line or \"Other\" in line or \"Europe\" in line): #ignore non essential, we are only interested in countries\n                continue\n            temp_line = line.replace(u\"\\xa0\",'') #getting rid of non breaking spaces\n            index1 = temp_line.find('\"')\n\n            #recursively find double quotes to clean data and make numerical figure extractable\n            while(index1!=-1):\n                index2 = temp_line.find('\"',index1+1)\n                temp_line2 = temp_line[index1+1:index2].replace(\",\", \"\")\n                temp_line3 = temp_line[:index1] + temp_line2 + temp_line[index2+1:]\n                temp_line = temp_line3\n                index1 = temp_line.find('\"')\n\n            #out of the recursive loop, we have a clean line stored in temp_line\n            temp_list = temp_line.split(\",\")\n            temp_name = temp_list[0]\n            temp_number = int(temp_list[1])\n\n            #make data more readable\n            if (temp_name.startswith(\"China\")):\n                temp_name = \"China\"\n            elif(temp_name.startswith(\"United Kingdom\")):\n                temp_name = \"United Kingdom\"\n            pair = (temp_name, temp_number)\n            final_list.append(pair)\n\n        #Note: USA data provides United Kingdom, England and Scotland seperately.\n        #We will combine them in one to match Australian data.\n        #Also add the total overseas born\n\n        country_name = \"United Kingdom\"\n        country_number = 0\n        clean_list = []\n        clean_list.append((\"Overseas Born\", extract_tot_pop_USA(USA_FILE)))\n\n        for pair in final_list:\n            if (pair[0] == \"Scotland\" or pair[0] == \"United Kingdom\" or pair[0] == \"England\"):\n                country_number = country_number + pair[1]\n            else:\n                clean_list.append(pair)\n        clean_list.append((country_name, country_number))\n\n        return clean_list","kernel":"python3","no_halt":true,"pos":19,"start":1665575766139,"state":"done","type":"cell"}
{"cell_type":"code","end":1665575766175,"exec_count":6,"id":"e7eb30","input":"#Extract clean data for Ausralia\nau_list_1 = clean_au(AU_FILE_1)\nau_list_2 = clean_au(AU_FILE_2)\nau_list_3 = clean_au(AU_FILE_3)\nau_final_list = combine_and_sort([au_list_1,au_list_2,au_list_3])\n\n#Extract clean data for USA\nusa_list = clean_usa(USA_FILE)\nusa_final_list = combine_and_sort([usa_list])\n\n#Define some more constants for natively born population\n\nNATIVELY_BORN_POP_AU = TOTAL_POP_AU - au_final_list[0][1]\nNATIVELY_BORN_POP_USA = TOTAL_POP_USA - usa_final_list[0][1]","kernel":"python3","no_halt":true,"pos":21,"start":1665575766157,"state":"done","type":"cell"}
{"cell_type":"code","end":1665575766196,"exec_count":7,"id":"4d5aaa","input":"def convert_to_proportions(data_list, total_pop):\n    new_data_list = []\n\n    for i in range(len(data_list)):\n        new_data_list.append([data_list[i][0], round((data_list[i][1]/total_pop)*100,1)]) #convert to proportion\n    return new_data_list[:11]\n\nau_top_10 = convert_to_proportions(au_final_list, TOTAL_POP_AU) #create clean au top 10 countries with proportions\nusa_top_10 = convert_to_proportions(usa_final_list, TOTAL_POP_USA) #create clean usa top 10 countries with proportions \n\ndef print_table(au_list,nz_list):\n    print(\"{:<27} {:<27} {:<27} {:<27}\".format('    Proportions for Australia','', '     Proportions for USA', '')) #format for the table\n    for i in range(len(au_list)):\n        a, b = au_list[i]\n        b = str(b) + '%'\n        c, d = nz_list[i]\n        d = str(d) + '%'\n        print(\"{:<27} {:<27}\".format(a,b), \"{:<27} {:<27}\".format(c,d))\n\nprint_table(au_top_10, usa_top_10)","kernel":"python3","no_halt":true,"output":{"0":{"name":"stdout","text":"    Proportions for Australia                                  Proportions for USA                               \nOverseas Born               27.7%                       Overseas Born               13.5%                      \nUnited Kingdom              4.4%                        Mexico                      3.3%                       \nIndia                       2.6%                        India                       0.8%                       \nChina                       2.2%                        China                       0.7%                       \nNew Zealand                 2.1%                        Philippines                 0.6%                       \nPhilippines                 1.2%                        El Salvador                 0.4%                       \nVietnam                     1.0%                        Vietnam                     0.4%                       \nSouth Africa                0.7%                        Cuba                        0.4%                       \nMalaysia                    0.7%                        Dominican Republic          0.3%                       \nItaly                       0.6%                        Korea                       0.3%                       \nSri Lanka                   0.5%                        Guatemala                   0.3%                       \n"}},"pos":25,"start":1665575766184,"state":"done","type":"cell"}
{"cell_type":"code","end":1665575766235,"exec_count":8,"id":"b4cdd9","input":"def bar_chart_lists(data_list, native_born_pop, total_pop):\n    birth_place = []\n    num_people = []\n\n    birth_place.append(\"Natively Born\")\n    proportion_1 = (native_born_pop/total_pop)*100 #convert to proportion\n    num_people.append(round(proportion_1,3))\n    birth_place.append(data_list[0][0]) #extract overseas born\n    proportion_2 = (data_list[0][1]/total_pop)*100\n    num_people.append(round(proportion_2,3))\n\n    return birth_place, num_people\n\ndef pie_chart_lists(top_10_list):\n    country_list = []\n    number_list = []\n\n    for i in range(1,len(top_10_list)): #ignore overseas born, only considering top 10 countries\n        country_list.append(top_10_list[i][0])\n        number_list.append(top_10_list[i][1])\n\n    return country_list, number_list\n\n#create au, usa lists for bar chart\nau_barplot_birth, au_barplot_people = bar_chart_lists(au_final_list, NATIVELY_BORN_POP_AU, TOTAL_POP_AU)\nusa_barplot_birth, usa_barplot_people = bar_chart_lists(usa_final_list, NATIVELY_BORN_POP_USA, TOTAL_POP_USA)\n\n#create au, usa lists for pie chart\nau_pieplot_birth, au_pieplot_people = pie_chart_lists(au_top_10)\nusa_pieplot_birth, usa_pieplot_people = pie_chart_lists(usa_top_10)","kernel":"python3","no_halt":true,"pos":27,"start":1665575766201,"state":"done","type":"cell"}
{"cell_type":"code","end":1665575766252,"exec_count":9,"id":"9bbff9","input":"import matplotlib.pyplot as plt","kernel":"python3","no_halt":true,"pos":30,"start":1665575766239,"state":"done","type":"cell"}
{"cell_type":"code","end":1665575766829,"exec_count":10,"id":"2f3ca1","input":"plt.axes([0.05,0,0.6,0.9]) #axes for au plot\nplt.bar(au_barplot_birth, au_barplot_people, color = \"red\")\nplt.xlabel(\"Country of Birth\")\nplt.ylabel(\"Proportion of people\")\nplt.title(\"Proportion of Natively Born Vs Overseas Born for Australia\")\n\nplt.axes([0.8,0,0.6,0.9]) #axes for usa plot\nplt.bar(usa_barplot_birth, usa_barplot_people, color = \"red\")\nplt.xlabel(\"Country of Birth\")\nplt.ylabel(\"Proportion of people\")\nplt.title(\"Proportion of Natively Born Vs Overseas Born for USA\")\n\nplt.show()","kernel":"python3","no_halt":true,"output":{"0":{"data":{"image/png":"28b3a0770468d797001717adfe28eeeb035138a6","text/plain":"<Figure size 864x504 with 2 Axes>"},"metadata":{"image/png":{"height":513,"width":1214},"needs_background":"light"}}},"pos":32,"start":1665575766257,"state":"done","type":"cell"}
{"cell_type":"code","end":1665575767264,"exec_count":11,"id":"ca4b10","input":"plt.axes([0.05,0,0.5,1]) #axes for au plot\nplt.pie(au_pieplot_people, labels = au_pieplot_birth)\nplt.title(\"Top 10 Immigrant Countries for Australia\")\n\nplt.axes([0.7,0,0.5,1]) #axes for nz plot\nplt.pie(usa_pieplot_people, labels = usa_pieplot_birth)\nplt.title(\"Top 10 Immigrant Countries for USA\")\n\nplt.show()","kernel":"python3","no_halt":true,"output":{"0":{"data":{"image/png":"ee516dfc5cb132d371741ebe5fad6061367124b7","text/plain":"<Figure size 864x504 with 2 Axes>"},"metadata":{"image/png":{"height":461,"width":1047}}}},"pos":34,"start":1665575766839,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"05fc16","input":"We will now construct a bar chart visualising the proportion of overseas born vs natively born for the two countries.  \n\n","pos":31,"type":"cell"}
{"cell_type":"markdown","id":"0be475","input":"### CONTEXT\n\n","pos":4,"type":"cell"}
{"cell_type":"markdown","id":"18abe7","input":"A function to extract data for USA.  \n\n","pos":18,"type":"cell"}
{"cell_type":"markdown","id":"223193","input":"In conlusion, we were able to find out that most immigrants living in Australia have come from the United Kingdom whereas for USA, they have come from Mexico. We also found some similarities in immigration to Australia and USA mostly related to countries in Asia. Overall, Australia seems to have a lot more cultural diversity \\(in proportion\\) to the USA.\n","pos":38,"type":"cell"}
{"cell_type":"markdown","id":"390ee5","input":"Firstly lets define a function to extract total population at the time of ACS release for USA.  \n\n","pos":12,"type":"cell"}
{"cell_type":"markdown","id":"456cbb","input":"<h3>Lab 4/5: Assignment</h3>\n\n# USA - Australia Comparison on Census Data\n\n---","pos":0,"type":"cell"}
{"cell_type":"markdown","id":"4dfa44","input":"As expected, the distribution is indeed quite different between the two countries. Australia has more than double the overseas born population proportionately compared to the USA. It is not suprising to see that India and China are at the very top considering they have the largest populations in the world. Based on the distributions above, it does seem that Australia has much more diversity in its population. \n\nBefore we can visualise the data, we need to write two small functions to gather the date in the appropriate order for visualisation. We will be using two charts to get a better understanding of our comparison, a bar chart and a pie chart. The bar chart will be comparing overseas born vs natively born for the two countries and the pie chart will give us the relative proportions of the immigrant countries.  \n\n\nOur bar chart function will create two lists for each country and so will our pie chart function, the content in our lists will be as per our requirements mentioned above.\n\n","pos":26,"type":"cell"}
{"cell_type":"markdown","id":"50eb53","input":"### DATA VISUALISATION\n\n","pos":29,"type":"cell"}
{"cell_type":"markdown","id":"510898","input":"There are definitely some interesting similarities and differences displayed in the pie chart above. \n\nMost of the people who have immigrated to Australia have come from United Kingdom whereas for USA, they have come from Mexico. This isn't suprising considering the history of Australia and the close proximity of USA and Mexico.\n\nFrom above, we can also see some similarity in the overseas born population. India, China, Phillipines and Vietnam are the top common ones for both countries and suprisingly, in more or less the same order. If we shift our focus on the basis of continent, we can see that people from Asia have immigrated the most to Australia. Compare that to the USA, where people from North America have immigrated the most.  \n\n","pos":35,"type":"cell"}
{"cell_type":"markdown","id":"528b72","input":"A function to extract data for Australia.  \n\n","pos":16,"type":"cell"}
{"cell_type":"markdown","id":"54e2f8","input":"As we have previously gathered from our table, Australia has a lot more overseas born population \\(in proportion\\) compared to the USA. The difference is apparent and visualising through the bar chart does put it into perspective. Comparing overseas born to each countries natively born population, Australia does seem to being doing a lot better in terms of cultural diversity.  \n\n\nWe will now be creating a pie chart which is much better suited to give us an idea about the proportions of the top 10 immigrant countries for Australia and USA.\n","pos":33,"type":"cell"}
{"cell_type":"markdown","id":"65b296","input":"### DATA CLEANING/CONVERSION\n\n","pos":10,"type":"cell"}
{"cell_type":"markdown","id":"6ee0ea","input":"---\n\n","pos":22,"type":"cell"}
{"cell_type":"markdown","id":"702eb0","input":"---\n\n","pos":9,"type":"cell"}
{"cell_type":"markdown","id":"78538e","input":"---\n\n","pos":28,"type":"cell"}
{"cell_type":"markdown","id":"7dd82c","input":"### CONCLUSION\n\n","pos":37,"type":"cell"}
{"cell_type":"markdown","id":"91f729","input":"Lets define our essential constants.\n","pos":14,"type":"cell"}
{"cell_type":"markdown","id":"a989ea","input":"We wil now write a function to create a new list for both the countries which contain proportions instead of number of people, this wil help us to compare the countries better since the difference in population size is quite enormous before Australia and USA. The proportions are with respect to the populations of the countries and converted into a percentage. The function will also convert our tuples into a list giving us a list of lists, we will take the top 10 countries along with the category \"Overseas Born\". \n\nWe will also write another small function to print us the table of proportions of each immigrant country so that we can clearly see their distribution.\n","pos":24,"type":"cell"}
{"cell_type":"markdown","id":"ae53b8","input":"We are going to be analyzing the similarities and differences in Birthplace for people living in Australia and USA. The question I am looking to get an answer for is where do most immigrants living in Australian and USA come from. Also, I want to find the immigration similarities and differences between these two countries \\- considering the huge population difference between Australia and USA, and the fact that they are on different sides of the globe, we would expect a disimilar immigrant population distribution between the two countries.\n\nThis will also give us an insight about the cultural diversity in these two countries. For the sake of simplicity, we will be extracting the top ten overseas birth places for each country, and to make the data comparable, we will be looking in terms of proportion of the population.\n","pos":5,"type":"cell"}
{"cell_type":"markdown","id":"b83ac8","input":"### DATA ACQUISITION\n\n","pos":7,"type":"cell"}
{"cell_type":"markdown","id":"baf927","input":"Finally, we can use our functions to extract the clean analyzable data.  \n\n","pos":20,"type":"cell"}
{"cell_type":"markdown","id":"bf2e9c","input":"---\n\n","pos":36,"type":"cell"}
{"cell_type":"markdown","id":"bff75e","input":"Firstly, we are going to write a function to clean up the Australian data files. As mentioned before, we only are interested in the total number of people born overseas for each country. Hence, we are going to ignore the data entries which includes year of arrival and only extract the totals. We will store both the \"Place of Birth\" and \"Total Number of People Born\" together in a tuple which all collectively will be stored in our final list. \n\nThe function will need to extract the two lines of our files and run through them to preserve the data we need in a temporary tuple. It will need to convert our numerical data to an interger value and then our final list will append these tuples. Finally, it will sort our final list in descending ordeer according to the numerical value in order to give us the top immigrant countries.\n","pos":11,"type":"cell"}
{"cell_type":"markdown","id":"ca946e","input":"---\n\n","pos":6,"type":"cell"}
{"cell_type":"markdown","id":"e69597","input":"\n<hr>\n","metadata":{"deletable":false,"editable":false,"nbgrader":{"grade":false,"grade_id":"assignment","locked":true,"points":15,"schema_version":3,"solution":false,"task":true}},"pos":3,"type":"cell"}
{"cell_type":"markdown","id":"e7fbb5","input":"The data for Australia will be acquired from Australia Bureau of Statistics which provides the full 2021 census data pack, see link down below. Using the user friendly \"Meta\\-Data\" file, we are interested in the table G10 \"Country of Birth of Person by Year of Arrival in Australia \\(for persons born overseas\\)\". This table is best suited for our purpose since we are solely interested in people born overseas. The Data is split by \"Year of Arrival in Australia\" however we can ignore this and focus on the totals for each country. We would need all three files corresponding to the table G10 which are \"2021Census\\_G10A\\_AUS\\_AUS.csv\", \"2021Census\\_G10B\\_AUS\\_AUS.csv\" and \"2021Census\\_G10C\\_AUS\\_AUS.csv\". Since we want to compare the numbers in proportion to the whole population, we also need the population of the country from the census. This can be obtained again from the Australian Bureau of Statistics, Key Population Statistics from 2021 \\- see the second link down below.\n\n[https://www.abs.gov.au/census/find\\-census\\-data/datapacks](https://www.abs.gov.au/census/find-census-data/datapacks) \\(Australian 2021 Census Data\\)\n\n[https://www.abs.gov.au/statistics/people/population/population\\-census/latest\\-release](https://www.abs.gov.au/statistics/people/population/population-census/latest-release) \\(Australian 2021 Census Key Population Statistics\\)\n\nThe census data for USA is still gradually being released and unfortunately for our purpose, we are limited to using American Community Survery data. However it actually works out quite well since we are able to obtain the \"2020 American Community Survery 5\\-Year Estimated Detailed Table\" which is the same time frame that Australia conducts its census i.e. every 5 years. The data will be obtained from United States Census Bureau, in particularly the page \"Explore Census Data\" which lets us search and download data tables for the topics we are interested in by year, geography etc. The search parameters I have used are **Geography** \\-&gt; Nation \\-&gt; United States and **Topics** \\-&gt; Populations and People \\-&gt; Native and Foreign Born \\-&gt; Place of Birth. Upon searching, using the tables section, we are interested in B05006 i.e. \"PLACE OF BIRTH FOR THE FOREIGN\\-BORN POPULATION IN THE UNITED STATES\" and in particular selecting from the top scroll down menu \"2020 ACS 5\\-Year Estimates Detailed Tables\". This table can be easily download in CSV format from \"More Tools\". See link down below for the \"Explore Census Data\". As before, we need the whole population for USA at the time of release of the particular table that we would be analyzing. This will be best done by extracting the total population from table   \nB05002 \"PLACE OF BIRTH BY NATIVITY AND CITIZENSHIP STATUS\" and again \"2020 ACS 5\\-Year Estimates Detailed Tables\", this can be obtained with the same search parameters.\n\nhttps://data.census.gov/cedsci/ \\(United States Census Bureau \\- Explore Census Data\\)  \n\n","pos":8,"type":"cell"}
{"cell_type":"markdown","id":"f7ba7e","input":"### DATA ANALYSIS/INTERPRETATION\n\n","pos":23,"type":"cell"}
{"cell_type":"markdown","id":"fca052","input":"## Declaration\n\nThis declaration should be completed and remain attached to the top of your submission.\n\n*I/we am/are aware of the University’s [policy on academic conduct](https://www.uwa.edu.au/policy/-/media/Project/UWA/UWA/Policy-Library/Policy/Student-Administration/Academic-Integrity/Academic-Integrity-Policy.doc) and I declare that this assignment is entirely the work of the author(s) listed below and that suitable acknowledgement has been made for any sources of information used in preparing it. I have retained a hard copy for my own records.*\n\n- Name 1: Anant Chhabda\n- Student ID 1: 21712878\n- Name 2:\n- Student ID 2:\n- Name 3:\n- Student ID 3:\n- Date: 21/09/2022  \n\nIf the assignment was completed in a group, please enter the student numbers in the \"StudyBuddy\" declaration below:\n\n","metadata":{"deletable":false},"pos":1,"type":"cell"}
{"id":0,"time":1665575732912,"type":"user"}
{"last_load":1665575586032,"type":"file"}